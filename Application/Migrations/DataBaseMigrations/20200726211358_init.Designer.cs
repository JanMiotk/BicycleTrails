// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Storage;

namespace Application.Migrations.DataBaseMigrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20200726211358_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.DetailedTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AverageSpeed")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Data")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DifficultyLevel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Distance")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Duration")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Exceedance")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("KindOfActivity")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Link")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("Map")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("longblob");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<string>("SumDown")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SumUp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Trail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Trails");
                });
#pragma warning restore 612, 618
        }
    }
}
